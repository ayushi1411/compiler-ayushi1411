Nonterminals useless in grammar

   variable


Rules useless in grammar

   71 variable: variable ',' variable
   72         | identifiers


State 12 conflicts: 2 shift/reduce
State 19 conflicts: 1 shift/reduce
State 115 conflicts: 15 shift/reduce


Grammar

    0 $accept: declblock $end

    1 declblock: DECL_BLOCK '{' decl_statement '}' codeblock

    2 codeblock: CODE_BLOCK '{' code_statement '}'

    3 decl_statement: DATATYPE decl_params ';'
    4               | decl_statement decl_statement
    5               | ';'

    6 decl_params: identifiers
    7            | decl_params ',' decl_params

    8 code_statement: EXIT_COMMAND ';'
    9               | assignment ';'
   10               | code_statement assignment ';'
   11               | PRINT print_statement ';'
   12               | PRINTLN print_statement ';'
   13               | READVAR identifiers ';'
   14               | if_statement else_statement
   15               | if_statement
   16               | for_statement
   17               | while_statement
   18               | goto_statement
   19               | IDENTIFIER ':'
   20               | code_statement PRINT print_statement ';'
   21               | code_statement PRINTLN print_statement ';'
   22               | code_statement READVAR IDENTIFIER ';'
   23               | code_statement EXIT_COMMAND ';'
   24               | code_statement if_statement else_statement
   25               | code_statement if_statement
   26               | code_statement for_statement
   27               | code_statement while_statement
   28               | code_statement goto_statement
   29               | code_statement IDENTIFIER ':'

   30 print_statement: print_statement ',' final_print_statement
   31                | final_print_statement

   32 final_print_statement: identifiers
   33                      | TEXT

   34 if_statement: IF exp '{' code_statement '}'

   35 else_statement: ELSE '{' code_statement '}'
   36               | ELSE if_statement

   37 for_statement: FOR for_exp '{' code_statement '}'

   38 for_exp: IDENTIFIER EQUATE NUMBER ',' NUMBER
   39        | IDENTIFIER EQUATE NUMBER ',' NUMBER ',' NUMBER

   40 while_statement: WHILELOOP exp '{' code_statement '}'

   41 assignment: identifiers EQUATE exp

   42 exp: term
   43    | exp binop exp
   44    | '(' exp ')'

   45 term: NUMBER
   46     | identifiers

   47 identifiers: IDENTIFIER
   48            | IDENTIFIER ARRAY_SIZE
   49            | IDENTIFIER ARRAY_INDEX

   50 arithop: PLUS
   51        | MINUS
   52        | MULTIPLY
   53        | DIVIDE
   54        | MODULO
   55        | RGTSHFT
   56        | LFTSHFT

   57 relop: LT
   58      | GT
   59      | LE
   60      | GE

   61 eqop: EQL
   62     | NTEQL

   63 condop: AND
   64       | OR

   65 binop: arithop
   66      | relop
   67      | eqop
   68      | condop

   69 goto_statement: GOTO IDENTIFIER IF exp ';'
   70               | GOTO IDENTIFIER ';'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 44
')' (41) 44
',' (44) 7 30 38 39
':' (58) 19 29
';' (59) 3 5 8 9 10 11 12 13 20 21 22 23 69 70
'{' (123) 1 2 34 35 37 40
'}' (125) 1 2 34 35 37 40
error (256)
ELSE (258) 35 36
GOTO (259) 69 70
FOR (260) 37
WHILELOOP (261) 40
PRINT (262) 11 20
PRINTLN (263) 12 21
READVAR (264) 13 22
EXIT_COMMAND (265) 8 23
CODE_BLOCK (266) 2
DECL_BLOCK (267) 1
DATATYPE (268) 3
EQUATE (269) 38 39 41
PLUS (270) 50
IF (271) 34 69
MINUS (272) 51
MULTIPLY (273) 52
DIVIDE (274) 53
MODULO (275) 54
RGTSHFT (276) 55
LFTSHFT (277) 56
LT (278) 57
GT (279) 58
LE (280) 59
GE (281) 60
EQL (282) 61
NTEQL (283) 62
AND (284) 63
OR (285) 64
ARRAY_INDEX (286) 49
NUMBER (287) 38 39 45
ARRAY_SIZE (288) 48
IDENTIFIER (289) 19 22 29 38 39 47 48 49 69 70
TEXT (290) 33


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
declblock (44)
    on left: 1, on right: 0
codeblock (45)
    on left: 2, on right: 1
decl_statement (46)
    on left: 3 4 5, on right: 1 4
decl_params (47)
    on left: 6 7, on right: 3 7
code_statement (48)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28 29, on right: 2 10 20 21 22 23 24 25 26 27 28 29 34 35 37
    40
print_statement (49)
    on left: 30 31, on right: 11 12 20 21 30
final_print_statement (50)
    on left: 32 33, on right: 30 31
if_statement (51)
    on left: 34, on right: 14 15 24 25 36
else_statement (52)
    on left: 35 36, on right: 14 24
for_statement (53)
    on left: 37, on right: 16 26
for_exp (54)
    on left: 38 39, on right: 37
while_statement (55)
    on left: 40, on right: 17 27
assignment (56)
    on left: 41, on right: 9 10
exp (57)
    on left: 42 43 44, on right: 34 40 41 43 44 69
term (58)
    on left: 45 46, on right: 42
identifiers (59)
    on left: 47 48 49, on right: 6 13 32 41 46
arithop (60)
    on left: 50 51 52 53 54 55 56, on right: 65
relop (61)
    on left: 57 58 59 60, on right: 66
eqop (62)
    on left: 61 62, on right: 67
condop (63)
    on left: 63 64, on right: 68
binop (64)
    on left: 65 66 67 68, on right: 43
goto_statement (65)
    on left: 69 70, on right: 18 28


State 0

    0 $accept: . declblock $end

    DECL_BLOCK  shift, and go to state 1

    declblock  go to state 2


State 1

    1 declblock: DECL_BLOCK . '{' decl_statement '}' codeblock

    '{'  shift, and go to state 3


State 2

    0 $accept: declblock . $end

    $end  shift, and go to state 4


State 3

    1 declblock: DECL_BLOCK '{' . decl_statement '}' codeblock

    DATATYPE  shift, and go to state 5
    ';'       shift, and go to state 6

    decl_statement  go to state 7


State 4

    0 $accept: declblock $end .

    $default  accept


State 5

    3 decl_statement: DATATYPE . decl_params ';'

    IDENTIFIER  shift, and go to state 8

    decl_params  go to state 9
    identifiers  go to state 10


State 6

    5 decl_statement: ';' .

    $default  reduce using rule 5 (decl_statement)


State 7

    1 declblock: DECL_BLOCK '{' decl_statement . '}' codeblock
    4 decl_statement: decl_statement . decl_statement

    DATATYPE  shift, and go to state 5
    '}'       shift, and go to state 11
    ';'       shift, and go to state 6

    decl_statement  go to state 12


State 8

   47 identifiers: IDENTIFIER .
   48            | IDENTIFIER . ARRAY_SIZE
   49            | IDENTIFIER . ARRAY_INDEX

    ARRAY_INDEX  shift, and go to state 13
    ARRAY_SIZE   shift, and go to state 14

    $default  reduce using rule 47 (identifiers)


State 9

    3 decl_statement: DATATYPE decl_params . ';'
    7 decl_params: decl_params . ',' decl_params

    ';'  shift, and go to state 15
    ','  shift, and go to state 16


State 10

    6 decl_params: identifiers .

    $default  reduce using rule 6 (decl_params)


State 11

    1 declblock: DECL_BLOCK '{' decl_statement '}' . codeblock

    CODE_BLOCK  shift, and go to state 17

    codeblock  go to state 18


State 12

    4 decl_statement: decl_statement . decl_statement
    4               | decl_statement decl_statement .

    DATATYPE  shift, and go to state 5
    ';'       shift, and go to state 6

    DATATYPE  [reduce using rule 4 (decl_statement)]
    ';'       [reduce using rule 4 (decl_statement)]
    $default  reduce using rule 4 (decl_statement)

    decl_statement  go to state 12


State 13

   49 identifiers: IDENTIFIER ARRAY_INDEX .

    $default  reduce using rule 49 (identifiers)


State 14

   48 identifiers: IDENTIFIER ARRAY_SIZE .

    $default  reduce using rule 48 (identifiers)


State 15

    3 decl_statement: DATATYPE decl_params ';' .

    $default  reduce using rule 3 (decl_statement)


State 16

    7 decl_params: decl_params ',' . decl_params

    IDENTIFIER  shift, and go to state 8

    decl_params  go to state 19
    identifiers  go to state 10


State 17

    2 codeblock: CODE_BLOCK . '{' code_statement '}'

    '{'  shift, and go to state 20


State 18

    1 declblock: DECL_BLOCK '{' decl_statement '}' codeblock .

    $default  reduce using rule 1 (declblock)


State 19

    7 decl_params: decl_params . ',' decl_params
    7            | decl_params ',' decl_params .

    ','  shift, and go to state 16

    ','       [reduce using rule 7 (decl_params)]
    $default  reduce using rule 7 (decl_params)


State 20

    2 codeblock: CODE_BLOCK '{' . code_statement '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 24
    PRINTLN       shift, and go to state 25
    READVAR       shift, and go to state 26
    EXIT_COMMAND  shift, and go to state 27
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 29

    code_statement   go to state 30
    if_statement     go to state 31
    for_statement    go to state 32
    while_statement  go to state 33
    assignment       go to state 34
    identifiers      go to state 35
    goto_statement   go to state 36


State 21

   69 goto_statement: GOTO . IDENTIFIER IF exp ';'
   70               | GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 37


State 22

   37 for_statement: FOR . for_exp '{' code_statement '}'

    IDENTIFIER  shift, and go to state 38

    for_exp  go to state 39


State 23

   40 while_statement: WHILELOOP . exp '{' code_statement '}'

    NUMBER      shift, and go to state 40
    IDENTIFIER  shift, and go to state 8
    '('         shift, and go to state 41

    exp          go to state 42
    term         go to state 43
    identifiers  go to state 44


State 24

   11 code_statement: PRINT . print_statement ';'

    IDENTIFIER  shift, and go to state 8
    TEXT        shift, and go to state 45

    print_statement        go to state 46
    final_print_statement  go to state 47
    identifiers            go to state 48


State 25

   12 code_statement: PRINTLN . print_statement ';'

    IDENTIFIER  shift, and go to state 8
    TEXT        shift, and go to state 45

    print_statement        go to state 49
    final_print_statement  go to state 47
    identifiers            go to state 48


State 26

   13 code_statement: READVAR . identifiers ';'

    IDENTIFIER  shift, and go to state 8

    identifiers  go to state 50


State 27

    8 code_statement: EXIT_COMMAND . ';'

    ';'  shift, and go to state 51


State 28

   34 if_statement: IF . exp '{' code_statement '}'

    NUMBER      shift, and go to state 40
    IDENTIFIER  shift, and go to state 8
    '('         shift, and go to state 41

    exp          go to state 52
    term         go to state 43
    identifiers  go to state 44


State 29

   19 code_statement: IDENTIFIER . ':'
   47 identifiers: IDENTIFIER .
   48            | IDENTIFIER . ARRAY_SIZE
   49            | IDENTIFIER . ARRAY_INDEX

    ARRAY_INDEX  shift, and go to state 13
    ARRAY_SIZE   shift, and go to state 14
    ':'          shift, and go to state 53

    $default  reduce using rule 47 (identifiers)


State 30

    2 codeblock: CODE_BLOCK '{' code_statement . '}'
   10 code_statement: code_statement . assignment ';'
   20               | code_statement . PRINT print_statement ';'
   21               | code_statement . PRINTLN print_statement ';'
   22               | code_statement . READVAR IDENTIFIER ';'
   23               | code_statement . EXIT_COMMAND ';'
   24               | code_statement . if_statement else_statement
   25               | code_statement . if_statement
   26               | code_statement . for_statement
   27               | code_statement . while_statement
   28               | code_statement . goto_statement
   29               | code_statement . IDENTIFIER ':'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 54
    PRINTLN       shift, and go to state 55
    READVAR       shift, and go to state 56
    EXIT_COMMAND  shift, and go to state 57
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 58
    '}'           shift, and go to state 59

    if_statement     go to state 60
    for_statement    go to state 61
    while_statement  go to state 62
    assignment       go to state 63
    identifiers      go to state 35
    goto_statement   go to state 64


State 31

   14 code_statement: if_statement . else_statement
   15               | if_statement .

    ELSE  shift, and go to state 65

    $default  reduce using rule 15 (code_statement)

    else_statement  go to state 66


State 32

   16 code_statement: for_statement .

    $default  reduce using rule 16 (code_statement)


State 33

   17 code_statement: while_statement .

    $default  reduce using rule 17 (code_statement)


State 34

    9 code_statement: assignment . ';'

    ';'  shift, and go to state 67


State 35

   41 assignment: identifiers . EQUATE exp

    EQUATE  shift, and go to state 68


State 36

   18 code_statement: goto_statement .

    $default  reduce using rule 18 (code_statement)


State 37

   69 goto_statement: GOTO IDENTIFIER . IF exp ';'
   70               | GOTO IDENTIFIER . ';'

    IF   shift, and go to state 69
    ';'  shift, and go to state 70


State 38

   38 for_exp: IDENTIFIER . EQUATE NUMBER ',' NUMBER
   39        | IDENTIFIER . EQUATE NUMBER ',' NUMBER ',' NUMBER

    EQUATE  shift, and go to state 71


State 39

   37 for_statement: FOR for_exp . '{' code_statement '}'

    '{'  shift, and go to state 72


State 40

   45 term: NUMBER .

    $default  reduce using rule 45 (term)


State 41

   44 exp: '(' . exp ')'

    NUMBER      shift, and go to state 40
    IDENTIFIER  shift, and go to state 8
    '('         shift, and go to state 41

    exp          go to state 73
    term         go to state 43
    identifiers  go to state 44


State 42

   40 while_statement: WHILELOOP exp . '{' code_statement '}'
   43 exp: exp . binop exp

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    MODULO    shift, and go to state 78
    RGTSHFT   shift, and go to state 79
    LFTSHFT   shift, and go to state 80
    LT        shift, and go to state 81
    GT        shift, and go to state 82
    LE        shift, and go to state 83
    GE        shift, and go to state 84
    EQL       shift, and go to state 85
    NTEQL     shift, and go to state 86
    AND       shift, and go to state 87
    OR        shift, and go to state 88
    '{'       shift, and go to state 89

    arithop  go to state 90
    relop    go to state 91
    eqop     go to state 92
    condop   go to state 93
    binop    go to state 94


State 43

   42 exp: term .

    $default  reduce using rule 42 (exp)


State 44

   46 term: identifiers .

    $default  reduce using rule 46 (term)


State 45

   33 final_print_statement: TEXT .

    $default  reduce using rule 33 (final_print_statement)


State 46

   11 code_statement: PRINT print_statement . ';'
   30 print_statement: print_statement . ',' final_print_statement

    ';'  shift, and go to state 95
    ','  shift, and go to state 96


State 47

   31 print_statement: final_print_statement .

    $default  reduce using rule 31 (print_statement)


State 48

   32 final_print_statement: identifiers .

    $default  reduce using rule 32 (final_print_statement)


State 49

   12 code_statement: PRINTLN print_statement . ';'
   30 print_statement: print_statement . ',' final_print_statement

    ';'  shift, and go to state 97
    ','  shift, and go to state 96


State 50

   13 code_statement: READVAR identifiers . ';'

    ';'  shift, and go to state 98


State 51

    8 code_statement: EXIT_COMMAND ';' .

    $default  reduce using rule 8 (code_statement)


State 52

   34 if_statement: IF exp . '{' code_statement '}'
   43 exp: exp . binop exp

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    MODULO    shift, and go to state 78
    RGTSHFT   shift, and go to state 79
    LFTSHFT   shift, and go to state 80
    LT        shift, and go to state 81
    GT        shift, and go to state 82
    LE        shift, and go to state 83
    GE        shift, and go to state 84
    EQL       shift, and go to state 85
    NTEQL     shift, and go to state 86
    AND       shift, and go to state 87
    OR        shift, and go to state 88
    '{'       shift, and go to state 99

    arithop  go to state 90
    relop    go to state 91
    eqop     go to state 92
    condop   go to state 93
    binop    go to state 94


State 53

   19 code_statement: IDENTIFIER ':' .

    $default  reduce using rule 19 (code_statement)


State 54

   20 code_statement: code_statement PRINT . print_statement ';'

    IDENTIFIER  shift, and go to state 8
    TEXT        shift, and go to state 45

    print_statement        go to state 100
    final_print_statement  go to state 47
    identifiers            go to state 48


State 55

   21 code_statement: code_statement PRINTLN . print_statement ';'

    IDENTIFIER  shift, and go to state 8
    TEXT        shift, and go to state 45

    print_statement        go to state 101
    final_print_statement  go to state 47
    identifiers            go to state 48


State 56

   22 code_statement: code_statement READVAR . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 102


State 57

   23 code_statement: code_statement EXIT_COMMAND . ';'

    ';'  shift, and go to state 103


State 58

   29 code_statement: code_statement IDENTIFIER . ':'
   47 identifiers: IDENTIFIER .
   48            | IDENTIFIER . ARRAY_SIZE
   49            | IDENTIFIER . ARRAY_INDEX

    ARRAY_INDEX  shift, and go to state 13
    ARRAY_SIZE   shift, and go to state 14
    ':'          shift, and go to state 104

    $default  reduce using rule 47 (identifiers)


State 59

    2 codeblock: CODE_BLOCK '{' code_statement '}' .

    $default  reduce using rule 2 (codeblock)


State 60

   24 code_statement: code_statement if_statement . else_statement
   25               | code_statement if_statement .

    ELSE  shift, and go to state 65

    $default  reduce using rule 25 (code_statement)

    else_statement  go to state 105


State 61

   26 code_statement: code_statement for_statement .

    $default  reduce using rule 26 (code_statement)


State 62

   27 code_statement: code_statement while_statement .

    $default  reduce using rule 27 (code_statement)


State 63

   10 code_statement: code_statement assignment . ';'

    ';'  shift, and go to state 106


State 64

   28 code_statement: code_statement goto_statement .

    $default  reduce using rule 28 (code_statement)


State 65

   35 else_statement: ELSE . '{' code_statement '}'
   36               | ELSE . if_statement

    IF   shift, and go to state 28
    '{'  shift, and go to state 107

    if_statement  go to state 108


State 66

   14 code_statement: if_statement else_statement .

    $default  reduce using rule 14 (code_statement)


State 67

    9 code_statement: assignment ';' .

    $default  reduce using rule 9 (code_statement)


State 68

   41 assignment: identifiers EQUATE . exp

    NUMBER      shift, and go to state 40
    IDENTIFIER  shift, and go to state 8
    '('         shift, and go to state 41

    exp          go to state 109
    term         go to state 43
    identifiers  go to state 44


State 69

   69 goto_statement: GOTO IDENTIFIER IF . exp ';'

    NUMBER      shift, and go to state 40
    IDENTIFIER  shift, and go to state 8
    '('         shift, and go to state 41

    exp          go to state 110
    term         go to state 43
    identifiers  go to state 44


State 70

   70 goto_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 70 (goto_statement)


State 71

   38 for_exp: IDENTIFIER EQUATE . NUMBER ',' NUMBER
   39        | IDENTIFIER EQUATE . NUMBER ',' NUMBER ',' NUMBER

    NUMBER  shift, and go to state 111


State 72

   37 for_statement: FOR for_exp '{' . code_statement '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 24
    PRINTLN       shift, and go to state 25
    READVAR       shift, and go to state 26
    EXIT_COMMAND  shift, and go to state 27
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 29

    code_statement   go to state 112
    if_statement     go to state 31
    for_statement    go to state 32
    while_statement  go to state 33
    assignment       go to state 34
    identifiers      go to state 35
    goto_statement   go to state 36


State 73

   43 exp: exp . binop exp
   44    | '(' exp . ')'

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    MODULO    shift, and go to state 78
    RGTSHFT   shift, and go to state 79
    LFTSHFT   shift, and go to state 80
    LT        shift, and go to state 81
    GT        shift, and go to state 82
    LE        shift, and go to state 83
    GE        shift, and go to state 84
    EQL       shift, and go to state 85
    NTEQL     shift, and go to state 86
    AND       shift, and go to state 87
    OR        shift, and go to state 88
    ')'       shift, and go to state 113

    arithop  go to state 90
    relop    go to state 91
    eqop     go to state 92
    condop   go to state 93
    binop    go to state 94


State 74

   50 arithop: PLUS .

    $default  reduce using rule 50 (arithop)


State 75

   51 arithop: MINUS .

    $default  reduce using rule 51 (arithop)


State 76

   52 arithop: MULTIPLY .

    $default  reduce using rule 52 (arithop)


State 77

   53 arithop: DIVIDE .

    $default  reduce using rule 53 (arithop)


State 78

   54 arithop: MODULO .

    $default  reduce using rule 54 (arithop)


State 79

   55 arithop: RGTSHFT .

    $default  reduce using rule 55 (arithop)


State 80

   56 arithop: LFTSHFT .

    $default  reduce using rule 56 (arithop)


State 81

   57 relop: LT .

    $default  reduce using rule 57 (relop)


State 82

   58 relop: GT .

    $default  reduce using rule 58 (relop)


State 83

   59 relop: LE .

    $default  reduce using rule 59 (relop)


State 84

   60 relop: GE .

    $default  reduce using rule 60 (relop)


State 85

   61 eqop: EQL .

    $default  reduce using rule 61 (eqop)


State 86

   62 eqop: NTEQL .

    $default  reduce using rule 62 (eqop)


State 87

   63 condop: AND .

    $default  reduce using rule 63 (condop)


State 88

   64 condop: OR .

    $default  reduce using rule 64 (condop)


State 89

   40 while_statement: WHILELOOP exp '{' . code_statement '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 24
    PRINTLN       shift, and go to state 25
    READVAR       shift, and go to state 26
    EXIT_COMMAND  shift, and go to state 27
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 29

    code_statement   go to state 114
    if_statement     go to state 31
    for_statement    go to state 32
    while_statement  go to state 33
    assignment       go to state 34
    identifiers      go to state 35
    goto_statement   go to state 36


State 90

   65 binop: arithop .

    $default  reduce using rule 65 (binop)


State 91

   66 binop: relop .

    $default  reduce using rule 66 (binop)


State 92

   67 binop: eqop .

    $default  reduce using rule 67 (binop)


State 93

   68 binop: condop .

    $default  reduce using rule 68 (binop)


State 94

   43 exp: exp binop . exp

    NUMBER      shift, and go to state 40
    IDENTIFIER  shift, and go to state 8
    '('         shift, and go to state 41

    exp          go to state 115
    term         go to state 43
    identifiers  go to state 44


State 95

   11 code_statement: PRINT print_statement ';' .

    $default  reduce using rule 11 (code_statement)


State 96

   30 print_statement: print_statement ',' . final_print_statement

    IDENTIFIER  shift, and go to state 8
    TEXT        shift, and go to state 45

    final_print_statement  go to state 116
    identifiers            go to state 48


State 97

   12 code_statement: PRINTLN print_statement ';' .

    $default  reduce using rule 12 (code_statement)


State 98

   13 code_statement: READVAR identifiers ';' .

    $default  reduce using rule 13 (code_statement)


State 99

   34 if_statement: IF exp '{' . code_statement '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 24
    PRINTLN       shift, and go to state 25
    READVAR       shift, and go to state 26
    EXIT_COMMAND  shift, and go to state 27
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 29

    code_statement   go to state 117
    if_statement     go to state 31
    for_statement    go to state 32
    while_statement  go to state 33
    assignment       go to state 34
    identifiers      go to state 35
    goto_statement   go to state 36


State 100

   20 code_statement: code_statement PRINT print_statement . ';'
   30 print_statement: print_statement . ',' final_print_statement

    ';'  shift, and go to state 118
    ','  shift, and go to state 96


State 101

   21 code_statement: code_statement PRINTLN print_statement . ';'
   30 print_statement: print_statement . ',' final_print_statement

    ';'  shift, and go to state 119
    ','  shift, and go to state 96


State 102

   22 code_statement: code_statement READVAR IDENTIFIER . ';'

    ';'  shift, and go to state 120


State 103

   23 code_statement: code_statement EXIT_COMMAND ';' .

    $default  reduce using rule 23 (code_statement)


State 104

   29 code_statement: code_statement IDENTIFIER ':' .

    $default  reduce using rule 29 (code_statement)


State 105

   24 code_statement: code_statement if_statement else_statement .

    $default  reduce using rule 24 (code_statement)


State 106

   10 code_statement: code_statement assignment ';' .

    $default  reduce using rule 10 (code_statement)


State 107

   35 else_statement: ELSE '{' . code_statement '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 24
    PRINTLN       shift, and go to state 25
    READVAR       shift, and go to state 26
    EXIT_COMMAND  shift, and go to state 27
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 29

    code_statement   go to state 121
    if_statement     go to state 31
    for_statement    go to state 32
    while_statement  go to state 33
    assignment       go to state 34
    identifiers      go to state 35
    goto_statement   go to state 36


State 108

   36 else_statement: ELSE if_statement .

    $default  reduce using rule 36 (else_statement)


State 109

   41 assignment: identifiers EQUATE exp .
   43 exp: exp . binop exp

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    MODULO    shift, and go to state 78
    RGTSHFT   shift, and go to state 79
    LFTSHFT   shift, and go to state 80
    LT        shift, and go to state 81
    GT        shift, and go to state 82
    LE        shift, and go to state 83
    GE        shift, and go to state 84
    EQL       shift, and go to state 85
    NTEQL     shift, and go to state 86
    AND       shift, and go to state 87
    OR        shift, and go to state 88

    $default  reduce using rule 41 (assignment)

    arithop  go to state 90
    relop    go to state 91
    eqop     go to state 92
    condop   go to state 93
    binop    go to state 94


State 110

   43 exp: exp . binop exp
   69 goto_statement: GOTO IDENTIFIER IF exp . ';'

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    MODULO    shift, and go to state 78
    RGTSHFT   shift, and go to state 79
    LFTSHFT   shift, and go to state 80
    LT        shift, and go to state 81
    GT        shift, and go to state 82
    LE        shift, and go to state 83
    GE        shift, and go to state 84
    EQL       shift, and go to state 85
    NTEQL     shift, and go to state 86
    AND       shift, and go to state 87
    OR        shift, and go to state 88
    ';'       shift, and go to state 122

    arithop  go to state 90
    relop    go to state 91
    eqop     go to state 92
    condop   go to state 93
    binop    go to state 94


State 111

   38 for_exp: IDENTIFIER EQUATE NUMBER . ',' NUMBER
   39        | IDENTIFIER EQUATE NUMBER . ',' NUMBER ',' NUMBER

    ','  shift, and go to state 123


State 112

   10 code_statement: code_statement . assignment ';'
   20               | code_statement . PRINT print_statement ';'
   21               | code_statement . PRINTLN print_statement ';'
   22               | code_statement . READVAR IDENTIFIER ';'
   23               | code_statement . EXIT_COMMAND ';'
   24               | code_statement . if_statement else_statement
   25               | code_statement . if_statement
   26               | code_statement . for_statement
   27               | code_statement . while_statement
   28               | code_statement . goto_statement
   29               | code_statement . IDENTIFIER ':'
   37 for_statement: FOR for_exp '{' code_statement . '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 54
    PRINTLN       shift, and go to state 55
    READVAR       shift, and go to state 56
    EXIT_COMMAND  shift, and go to state 57
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 58
    '}'           shift, and go to state 124

    if_statement     go to state 60
    for_statement    go to state 61
    while_statement  go to state 62
    assignment       go to state 63
    identifiers      go to state 35
    goto_statement   go to state 64


State 113

   44 exp: '(' exp ')' .

    $default  reduce using rule 44 (exp)


State 114

   10 code_statement: code_statement . assignment ';'
   20               | code_statement . PRINT print_statement ';'
   21               | code_statement . PRINTLN print_statement ';'
   22               | code_statement . READVAR IDENTIFIER ';'
   23               | code_statement . EXIT_COMMAND ';'
   24               | code_statement . if_statement else_statement
   25               | code_statement . if_statement
   26               | code_statement . for_statement
   27               | code_statement . while_statement
   28               | code_statement . goto_statement
   29               | code_statement . IDENTIFIER ':'
   40 while_statement: WHILELOOP exp '{' code_statement . '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 54
    PRINTLN       shift, and go to state 55
    READVAR       shift, and go to state 56
    EXIT_COMMAND  shift, and go to state 57
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 58
    '}'           shift, and go to state 125

    if_statement     go to state 60
    for_statement    go to state 61
    while_statement  go to state 62
    assignment       go to state 63
    identifiers      go to state 35
    goto_statement   go to state 64


State 115

   43 exp: exp . binop exp
   43    | exp binop exp .

    PLUS      shift, and go to state 74
    MINUS     shift, and go to state 75
    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77
    MODULO    shift, and go to state 78
    RGTSHFT   shift, and go to state 79
    LFTSHFT   shift, and go to state 80
    LT        shift, and go to state 81
    GT        shift, and go to state 82
    LE        shift, and go to state 83
    GE        shift, and go to state 84
    EQL       shift, and go to state 85
    NTEQL     shift, and go to state 86
    AND       shift, and go to state 87
    OR        shift, and go to state 88

    PLUS      [reduce using rule 43 (exp)]
    MINUS     [reduce using rule 43 (exp)]
    MULTIPLY  [reduce using rule 43 (exp)]
    DIVIDE    [reduce using rule 43 (exp)]
    MODULO    [reduce using rule 43 (exp)]
    RGTSHFT   [reduce using rule 43 (exp)]
    LFTSHFT   [reduce using rule 43 (exp)]
    LT        [reduce using rule 43 (exp)]
    GT        [reduce using rule 43 (exp)]
    LE        [reduce using rule 43 (exp)]
    GE        [reduce using rule 43 (exp)]
    EQL       [reduce using rule 43 (exp)]
    NTEQL     [reduce using rule 43 (exp)]
    AND       [reduce using rule 43 (exp)]
    OR        [reduce using rule 43 (exp)]
    $default  reduce using rule 43 (exp)

    arithop  go to state 90
    relop    go to state 91
    eqop     go to state 92
    condop   go to state 93
    binop    go to state 94


State 116

   30 print_statement: print_statement ',' final_print_statement .

    $default  reduce using rule 30 (print_statement)


State 117

   10 code_statement: code_statement . assignment ';'
   20               | code_statement . PRINT print_statement ';'
   21               | code_statement . PRINTLN print_statement ';'
   22               | code_statement . READVAR IDENTIFIER ';'
   23               | code_statement . EXIT_COMMAND ';'
   24               | code_statement . if_statement else_statement
   25               | code_statement . if_statement
   26               | code_statement . for_statement
   27               | code_statement . while_statement
   28               | code_statement . goto_statement
   29               | code_statement . IDENTIFIER ':'
   34 if_statement: IF exp '{' code_statement . '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 54
    PRINTLN       shift, and go to state 55
    READVAR       shift, and go to state 56
    EXIT_COMMAND  shift, and go to state 57
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 58
    '}'           shift, and go to state 126

    if_statement     go to state 60
    for_statement    go to state 61
    while_statement  go to state 62
    assignment       go to state 63
    identifiers      go to state 35
    goto_statement   go to state 64


State 118

   20 code_statement: code_statement PRINT print_statement ';' .

    $default  reduce using rule 20 (code_statement)


State 119

   21 code_statement: code_statement PRINTLN print_statement ';' .

    $default  reduce using rule 21 (code_statement)


State 120

   22 code_statement: code_statement READVAR IDENTIFIER ';' .

    $default  reduce using rule 22 (code_statement)


State 121

   10 code_statement: code_statement . assignment ';'
   20               | code_statement . PRINT print_statement ';'
   21               | code_statement . PRINTLN print_statement ';'
   22               | code_statement . READVAR IDENTIFIER ';'
   23               | code_statement . EXIT_COMMAND ';'
   24               | code_statement . if_statement else_statement
   25               | code_statement . if_statement
   26               | code_statement . for_statement
   27               | code_statement . while_statement
   28               | code_statement . goto_statement
   29               | code_statement . IDENTIFIER ':'
   35 else_statement: ELSE '{' code_statement . '}'

    GOTO          shift, and go to state 21
    FOR           shift, and go to state 22
    WHILELOOP     shift, and go to state 23
    PRINT         shift, and go to state 54
    PRINTLN       shift, and go to state 55
    READVAR       shift, and go to state 56
    EXIT_COMMAND  shift, and go to state 57
    IF            shift, and go to state 28
    IDENTIFIER    shift, and go to state 58
    '}'           shift, and go to state 127

    if_statement     go to state 60
    for_statement    go to state 61
    while_statement  go to state 62
    assignment       go to state 63
    identifiers      go to state 35
    goto_statement   go to state 64


State 122

   69 goto_statement: GOTO IDENTIFIER IF exp ';' .

    $default  reduce using rule 69 (goto_statement)


State 123

   38 for_exp: IDENTIFIER EQUATE NUMBER ',' . NUMBER
   39        | IDENTIFIER EQUATE NUMBER ',' . NUMBER ',' NUMBER

    NUMBER  shift, and go to state 128


State 124

   37 for_statement: FOR for_exp '{' code_statement '}' .

    $default  reduce using rule 37 (for_statement)


State 125

   40 while_statement: WHILELOOP exp '{' code_statement '}' .

    $default  reduce using rule 40 (while_statement)


State 126

   34 if_statement: IF exp '{' code_statement '}' .

    $default  reduce using rule 34 (if_statement)


State 127

   35 else_statement: ELSE '{' code_statement '}' .

    $default  reduce using rule 35 (else_statement)


State 128

   38 for_exp: IDENTIFIER EQUATE NUMBER ',' NUMBER .
   39        | IDENTIFIER EQUATE NUMBER ',' NUMBER . ',' NUMBER

    ','  shift, and go to state 129

    $default  reduce using rule 38 (for_exp)


State 129

   39 for_exp: IDENTIFIER EQUATE NUMBER ',' NUMBER ',' . NUMBER

    NUMBER  shift, and go to state 130


State 130

   39 for_exp: IDENTIFIER EQUATE NUMBER ',' NUMBER ',' NUMBER .

    $default  reduce using rule 39 (for_exp)
